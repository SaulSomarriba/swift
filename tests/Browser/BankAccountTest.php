<?php

namespace Tests\Browser;

use Tests\DuskTestCase;
use Laravel\Dusk\Browser;
use Illuminate\Foundation\Testing\DatabaseMigrations;

class BankAccountTest extends DuskTestCase
{
  /**
   * Login first before making further tests.
   *
   * @return void
   */
  public function testLogin()
  {
      $this->browse(function (Browser $browser) {
          $browser->visit('/login')
                  ->type('username', 'test_user')
                  ->type('password', 'secret')
                  ->press('#login-button')
                  ->waitForLocation('/swift/system/main')
                  ->assertPathIs('/swift/system/main')
                  ->click('.sidebar-toggle')
                  ->click('#menu_accounting')
                  ->pause(500)
                  ->click('#bank_accounts')
                  ->waitForText('POS')
                  ->assertSee('POS')
                  ->click('[data-target="#create-bank-account"]')
                  ->waitForText('Crear Cuenta de Banco')
                  ->assertSee('Crear Cuenta de Banco')
                  ->click('#create-bank-account-create')
                  ->waitForText('Nombre de Banco no puede dejarse en blanco!')
                  ->assertSee('Nombre de Banco no puede dejarse en blanco!')
                  ->type('#create-bank-account-name', 'BAC')
                  ->click('#create-bank-account-create')
                  ->waitForText('Numero de Cuenta de Banco no puede dejarse en blanco y debe ser un valor numerico!')
                  ->assertSee('Numero de Cuenta de Banco no puede dejarse en blanco y debe ser un valor numerico!')
                  ->type('#create-bank-account-number', '123456789')
                  ->click('#create-bank-account-create')
                  ->waitForText('Cuenta Contable no puede dejarse en blanco!')
                  ->assertSee('Cuenta Contable no puede dejarse en blanco!')
                  ->type('#create-bank-account-account', '102.1')
                  ->click('#create-bank-account-create')
                  ->waitForText('La cuenta de banco ha sido creada exitosamente!')
                  ->assertSee('La cuenta de banco ha sido creada exitosamente!')
                  ->click('[data-target="#create-bank-account"]')
                  ->waitForText('Crear Cuenta de Banco')
                  ->assertSee('Crear Cuenta de Banco')
                  ->click('#create-bank-account-create')
                  ->type('#create-bank-account-name', 'BDF')
                  ->type('#create-bank-account-number', '987654321')
                  ->type('#create-bank-account-account', '102.2')
                  ->click('#create-bank-account-create')
                  ->waitForText('La cuenta de banco ha sido creada exitosamente!')
                  ->assertSee('La cuenta de banco ha sido creada exitosamente!')
                  ->click('[data-target="#create-bank-account"]')
                  ->waitForText('Crear Cuenta de Banco')
                  ->assertSee('Crear Cuenta de Banco')
                  ->type('#create-bank-account-name', 'BDF')
                  ->type('#create-bank-account-number', '987654321')
                  ->type('#create-bank-account-account', '102.2')
                  ->click('#create-bank-account-create')
                  ->waitForText('Una cuenta de banco con el codigo definido ya existe!')
                  ->assertSee('Una cuenta de banco con el codigo definido ya existe!')
                  ->click('[data-dismiss="alert"]')
                  ->click('[data-dismiss="modal"]')
                  ->pause(500)
                  ->click('#bank-account-1 > td > div > div > div > .create-pos')
                  ->waitForText('Crear POS')
                  ->assertSee('Crear POS')
                  ->click('#create-pos-create')
                  ->waitForText('Nombre no puede dejarse en blanco!')
                  ->assertSee('Nombre no puede dejarse en blanco!')
                  ->type('#create-pos-name', 'BAC POS 1')
                  ->click('#create-pos-create')
                  ->waitForText('Comissiones no pueden dejarse en blanco y debe ser un valor numerico!')
                  ->assertSee('Comissiones no pueden dejarse en blanco y debe ser un valor numerico!')
                  ->type('#create-pos-bank-commission', '1')
                  ->type('#create-pos-government-commission', '1.5')
                  ->click('#create-pos-create')
                  ->waitForText('POS creado exitosamente!')
                  ->assertSee('POS creado exitosamente!')
                  ->click('#bank-account-1 > td > div > div > div > .create-cheque')
                  ->waitForText('Crear Chequera')
                  ->assertSee('Crear Chequera')
                  ->click('#create-cheque-book-create')
                  ->waitForText('Nombre de chequera no puede dejarse en blanco!')
                  ->assertSee('Nombre de chequera no puede dejarse en blanco!')
                  ->type('#create-cheque-book-name', 'Gastos')
                  ->click('#create-cheque-book-create')
                  ->waitForText('Numero de cheque no puede dejarse en blanco y debe ser un valor numerico!')
                  ->assertSee('Numero de cheque no puede dejarse en blanco y debe ser un valor numerico!')
                  ->type('#create-cheque-book-number', '1')
                  ->click('#create-cheque-book-create')
                  ->waitForText('Chequera creada exitosamente!')
                  ->assertSee('Chequera creada exitosamente!')
                  ->click('#bank-account-1 > td > div > div > div > .create-loan')
                  ->waitForText('Crear Prestamo')
                  ->assertSee('Crear Prestamo')
                  ->click('#create-loan-create')
                  ->waitForText('Cuenta no puede dejarse en blanco!')
                  ->assertSee('Cuenta no puede dejarse en blanco!')
                  ->type('#create-loan-account', '444.2.1')
                  ->click('#create-loan-create')
                  ->waitForText('Cantidad no puede dejarse en blanco y debe ser un valor numerico!')
                  ->assertSee('Cantidad no puede dejarse en blanco y debe ser un valor numerico!')
                  ->type('#create-loan-amount', '50000')
                  ->click('#create-loan-create')
                  ->waitForText('Fecha inicial puede dejarse en blanco!')
                  ->assertSee('Fecha inicial puede dejarse en blanco!')
                  ->type('#create-loan-start-date', '30-09-2017')
                  ->click('#create-loan-create')
                  ->waitForText('Tasa de Interes no puede dejarse en blanco y deben ser un valor numerico!')
                  ->assertSee('Tasa de Interes no puede dejarse en blanco y deben ser un valor numerico!')
                  ->type('#create-loan-interest', '2')
                  ->click('#create-loan-create')
                  ->waitForText('Pago por intervalo no puede dejarse en blanco y debe ser un valor numerico!')
                  ->assertSee('Pago por intervalo no puede dejarse en blanco y debe ser un valor numerico!')
                  ->type('#create-loan-payment', '1000')
                  ->click('#create-loan-create')
                  ->waitForText('Prestamo creado exitosamente!')
                  ->assertSee('Prestamo creado exitosamente!')
                  ->click('#view-pos-1')
                  ->waitForText('Editar POS')
                  ->assertSee('Editar POS')
                  ->type('#view-pos-name', 'BAC POS')
                  ->click('#view-pos-edit')
                  ->waitForText('POS actualizado exitosamente!')
                  ->assertSee('POS actualizado exitosamente!')
                  ->click('#view-loan-1')
                  ->waitForText('Editar Prestamo')
                  ->assertSee('Editar Prestamo')
                  ->select('#view-loan-interval', 'biweekly')
                  ->click('#view-loan-edit')
                  ->waitForText('Prestamo actualizado exitosamente!')
                  ->assertSee('Prestamo actualizado exitosamente!')
                  ->click('#view-cheque-1')
                  ->waitForText('Editar Chequera')
                  ->assertSee('Editar Chequera')
                  ->click('#view-cheque-book-create')
                  ->waitForText('Crear Cheque')
                  ->assertSee('Crear Cheque')
                  ->click('#create-cheque-create')
                  ->waitForText('Cuenta contable no puede dejarse en blanco!')
                  ->assertSee('Cuenta contable no puede dejarse en blanco!')
                  ->type('#create-cheque-account', '444.2.1')
                  ->click('#create-cheque-create')
                  ->waitForText('Cantidad no puede dejarse en blanco y debe ser un valor numerico!')
                  ->assertSee('Cantidad no puede dejarse en blanco y debe ser un valor numerico!')
                  ->type('#create-cheque-amount', '1000')
                  ->click('#create-cheque-create')
                  ->waitForText('Pagar A no puede dejarse en blanco!')
                  ->assertSee('Pagar A no puede dejarse en blanco!')
                  ->type('#create-cheque-pay-to', 'Proveedor 1')
                  ->click('#create-cheque-create')
                  ->waitForText('Descripcion no puede dejarse en blanco!')
                  ->assertSee('Descripcion no puede dejarse en blanco!')
                  ->type('#create-cheque-description', 'Abono deuda Proveedor 1')
                  ->click('#create-cheque-create');
      });
  }
}
